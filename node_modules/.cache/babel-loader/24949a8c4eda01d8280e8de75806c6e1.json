{"ast":null,"code":"var _jsxFileName = \"D:\\\\repos\\\\bilsem\\\\bilsemquizgame\\\\src\\\\components\\\\Questionnaire.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useSound from \"use-sound\";\nimport correct from \"../asset/sounds/Correct Answer Sound Effect.mp3\";\nimport wrong from \"../asset/sounds/Wrong Answer sound effect.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Questionnaire = _ref => {\n  _s();\n\n  let {\n    data: {\n      question,\n      correct_answer,\n      answers\n    },\n    handleAnswer\n  } = _ref;\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [className, setClassName] = useState(\"answer\");\n  const [correctAnswer] = useSound(correct);\n  const [wrongAnswer] = useSound(wrong);\n\n  const delay = (duration, callback) => {\n    setTimeout(() => {\n      callback();\n    }, duration);\n  };\n\n  const handleClick = answer => {\n    setSelectedAnswer(answer);\n    setClassName(\"answer active\");\n    delay(1000, () => {\n      setClassName(answer === correct_answer ? \"answer correct\" : \"answer wrong\");\n    });\n    delay(2000, () => {\n      if (answer === correct_answer) {\n        correctAnswer();\n        delay(2000, () => {\n          setSelectedAnswer(null);\n          handleAnswer(answer);\n        });\n      } else {\n        wrongAnswer();\n        delay(2000, () => {\n          setSelectedAnswer(null);\n          handleAnswer(answer);\n        });\n      }\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    // Questionnaire main container\n    _jsxDEV(\"div\", {\n      className: \"questionnaire\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question row\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          dangerouslySetInnerHTML: {\n            __html: question\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answers row\",\n        children: answers.map((answer, idx) => {\n          return /*#__PURE__*/_jsxDEV(\"button\", {\n            dangerouslySetInnerHTML: {\n              __html: answer\n            },\n            className: selectedAnswer === answer ? className : \"answer\",\n            onClick: () => !selectedAnswer && handleClick(answer)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(Questionnaire, \"0tLwNaWXHNXibx/82IB+4ZOGO/I=\", false, function () {\n  return [useSound, useSound];\n});\n\n_c = Questionnaire;\nexport default Questionnaire;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questionnaire\");","map":{"version":3,"sources":["D:/repos/bilsem/bilsemquizgame/src/components/Questionnaire.js"],"names":["React","useState","useSound","correct","wrong","Questionnaire","data","question","correct_answer","answers","handleAnswer","selectedAnswer","setSelectedAnswer","className","setClassName","correctAnswer","wrongAnswer","delay","duration","callback","setTimeout","handleClick","answer","__html","map","idx"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,OAAP,MAAoB,iDAApB;AACA,OAAOC,KAAP,MAAkB,+CAAlB;;;AAGA,MAAMC,aAAa,GAAG,QAKhB;AAAA;;AAAA,MALiB;AACnBC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,QAAF;AAAYC,MAAAA,cAAZ;AAA4BC,MAAAA;AAA5B,KADa;AAEnBC,IAAAA;AAFmB,GAKjB;AACF,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCX,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,QAAD,CAA1C;AACA,QAAM,CAACc,aAAD,IAAkBb,QAAQ,CAACC,OAAD,CAAhC;AACA,QAAM,CAACa,WAAD,IAAgBd,QAAQ,CAACE,KAAD,CAA9B;;AAKA,QAAMa,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAClCC,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,QAAQ;AACX,KAFS,EAEPD,QAFO,CAAV;AAGH,GAJD;;AAMA,QAAMG,WAAW,GAAIC,MAAD,IAAY;AAC5BV,IAAAA,iBAAiB,CAACU,MAAD,CAAjB;AACAR,IAAAA,YAAY,CAAC,eAAD,CAAZ;AACAG,IAAAA,KAAK,CAAC,IAAD,EAAO,MAAM;AACdH,MAAAA,YAAY,CAACQ,MAAM,KAAKd,cAAX,GAA4B,gBAA5B,GAA+C,cAAhD,CAAZ;AACH,KAFI,CAAL;AAIAS,IAAAA,KAAK,CAAC,IAAD,EAAO,MAAM;AACd,UAAIK,MAAM,KAAKd,cAAf,EAA+B;AAC3BO,QAAAA,aAAa;AACbE,QAAAA,KAAK,CAAC,IAAD,EAAO,MAAM;AACdL,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAF,UAAAA,YAAY,CAACY,MAAD,CAAZ;AACH,SAHI,CAAL;AAKH,OAPD,MAOO;AACHN,QAAAA,WAAW;AACXC,QAAAA,KAAK,CAAC,IAAD,EAAO,MAAM;AACdL,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACAF,UAAAA,YAAY,CAACY,MAAD,CAAZ;AACH,SAHI,CAAL;AAMH;AAEJ,KAlBI,CAAL;AAmBH,GA1BD;;AA6BA;AAAA;AACI;AACA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BAGI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BAEI;AACI,UAAA,uBAAuB,EAAE;AAAEC,YAAAA,MAAM,EAAEhB;AAAV;AAD7B;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAHJ,eAYI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBAEKE,OAAO,CAACe,GAAR,CAAY,CAACF,MAAD,EAASG,GAAT,KAAiB;AAC1B,8BACI;AAEI,YAAA,uBAAuB,EAAE;AAAEF,cAAAA,MAAM,EAAED;AAAV,aAF7B;AAGI,YAAA,SAAS,EAAEX,cAAc,KAAKW,MAAnB,GAA4BT,SAA5B,GAAwC,QAHvD;AAII,YAAA,OAAO,EAAE,MAAM,CAACF,cAAD,IAAmBU,WAAW,CAACC,MAAD;AAJjD,aACSG,GADT;AAAA;AAAA;AAAA;AAAA,kBADJ;AAQH,SATA;AAFL;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AA+BH,CAhFD;;GAAMpB,a;UAQsBH,Q,EACFA,Q;;;KATpBG,a;AAkFN,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\nimport useSound from \"use-sound\";\nimport correct from \"../asset/sounds/Correct Answer Sound Effect.mp3\";\nimport wrong from \"../asset/sounds/Wrong Answer sound effect.mp3\";\n\n\nconst Questionnaire = ({\n    data: { question, correct_answer, answers },\n    handleAnswer,\n\n\n}) => {\n    const [selectedAnswer, setSelectedAnswer] = useState(null);\n    const [className, setClassName] = useState(\"answer\");\n    const [correctAnswer] = useSound(correct);\n    const [wrongAnswer] = useSound(wrong);\n\n\n\n\n    const delay = (duration, callback) => {\n        setTimeout(() => {\n            callback();\n        }, duration);\n    };\n\n    const handleClick = (answer) => {\n        setSelectedAnswer(answer);\n        setClassName(\"answer active\");\n        delay(1000, () => {\n            setClassName(answer === correct_answer ? \"answer correct\" : \"answer wrong\");\n        });\n\n        delay(2000, () => {\n            if (answer === correct_answer) {\n                correctAnswer();\n                delay(2000, () => {\n                    setSelectedAnswer(null);\n                    handleAnswer(answer);\n                });\n\n            } else {\n                wrongAnswer();\n                delay(2000, () => {\n                    setSelectedAnswer(null);\n                    handleAnswer(answer);\n                });\n\n\n            }\n\n        })\n    };\n\n\n    return (\n        // Questionnaire main container\n        <div className=\"questionnaire\">\n\n            {/* question container */}\n            <div className=\"question row\">\n\n                <h2\n                    dangerouslySetInnerHTML={{ __html: question }}\n                />\n\n            </div>\n\n            {/* answers container */}\n            <div className='answers row'>\n\n                {answers.map((answer, idx) => {\n                    return (\n                        <button\n                            key={idx}\n                            dangerouslySetInnerHTML={{ __html: answer }}\n                            className={selectedAnswer === answer ? className : \"answer\"}\n                            onClick={() => !selectedAnswer && handleClick(answer)}\n                        />\n                    );\n                })}\n\n            </div>\n\n        </div>\n    );\n};\n\nexport default Questionnaire;"]},"metadata":{},"sourceType":"module"}